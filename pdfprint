#!/usr/local/bin/perl
# Require Perl5
#
# pdfprint -- a perl script to print PDF files,
#
# by ANFACE Software <anface@geocities.com> 11 July 1998
#
# Copy, use, and redistribute freely, but don't take my name off it and
# clearly mark an altered version.  Fixes and enhancements cheerfully 
# accepted.
#
# This is version 3.0.
#
use strict;
use Getopt::Long;
# libnet http://www.connect.net/gbarr/libnet/
use Net::FTP;
# libwww-perl-5 http://www.sn.no/libwww-perl/
use LWP::UserAgent;


my $version="3.0";
my $configure="pdfprint.cfg";
my $match="";
my $recursive="";
my $verbose="";
my $help="";
my @elem; my %option; my $elem="";

do GetOptions("configure=s" => \$configure,
              "recursive=s" => \$recursive,
              "match=s"     => \$match,
              "help"        => \$help,
              "verbose"     => \$verbose) || printusage() ;
@elem=("tmpdir","YOUR_email","converter","filter","print");
%option=(tmpdir             => '/tmp',
         YOUR_email         => 'yourname@yourhost.com',
         converter          => 'pdftops',
         filter             => '',
         print              => 'lpr');

$help and printusage();
($verbose && $configure) and print "I'm using $configure like configuration file\n";                                                       

open (CNF, "$configure") || die "pdfprint: couldn't open configuration file $configure\n";
while (<CNF>) {
  s/\t/ /g;        #replace tabs by space
  next if /^ *\#/; #ignore comment lines
  next if /^ *$/;  #ignore empty lines
  foreach $elem (@elem) {if (/ *$elem *: *(.*)/i) {$option{$elem}=$1;}}
  }
close(CNF);

sub wanted {
  if ($File::Find::name=~/$match/) {
    push @ARGV,$File::Find::name;
    }
  }

if ($match && !$recursive) {
   print "You can use -match option only with -recursive option\n";
   exit;
   }

if ($recursive) { 
  $match=~s/\./\\./g;
  $match=~s/\*/.*/g;
  $match=~s/\?/./g;
  $match=~s/$/\$/;
  find (\&wanted,"$recursive");
  }


my @args;
my $x=""; my $file=""; my $file1="";
my $url; my $urlfile; my @URL; my $directory;
if (@ARGV) {
  foreach $x (@ARGV) {
    if ($x=~/\.pdf$/i || $x=~/\.ps$/i || $x=~/\.html$/i || $x=~/\.htm$/i) {
# FTP URL
      if($x =~ /ftp:\/\/(.*)/) {
        @URL = split (/\//,$1);
        if($option{'YOUR_email'} eq "yourname\@yourhost.com") {
          print <<EOF;
WARNING: you are using yourname\@yourhost.com like password for anonymous ftp.
Change it in the configuration file with your e-mail address!
EOF
          }
        $directory.="/";
        $directory.=join ("/",@URL[1..($#URL-1)]);
        my $ftp = Net::FTP->new("$URL[$0]");
        $ftp->login("anonymous",$option{'YOUR_email'});
        $ftp->cwd("$directory");
        $ftp->get("$URL[$#URL]");
        $ftp->quit;
        $url=$x;
        $x=$URL[$#URL];
        $urlfile=1;
        }
# HTTP URL
      if($x =~ /http:\/\/(.*)/) {
        @URL = split (/\//,$1);
        my $http = new LWP::UserAgent;
        my $req = new HTTP::Request 'GET', "$x";
        my $res = $http->request($req,"$URL[$#URL]");
        $url=$x;
        $x=$URL[$#URL];
        $urlfile=1;
        }
      $file=$option{'tmpdir'}."/printpdf$$.tmp";
      $file1=$option{'tmpdir'}."/print1pdf$$.tmp";
      $verbose and print "Using the converter tool $option{'converter'} with $x file\n";
      if($option{'converter'}=~/htmldoc/) {
        system "$option{'converter'} -f $file $x";
        } else {
        system "$option{'converter'} $x $file";
        }
      if ($option{'filter'}) {
        $verbose and print "Using the filter tool $option{'filter'} with $x file\n";
        if($option{'filter'}=~/poster/) {
          system "$option{'filter'} $file > $file1";
          } else {
          system "$option{'filter'} $file $file1";
          }
        } else {rename $file,$file1;}
      $verbose and print "Using the printer tool $option{'print'} with $x file\n";
      system "$option{'print'} $file1";
      unlink $file, $file1;
      } else {print "Warning: the extension of the file isn't .pdf or .PDF, .ps or .PS, html or HTML, htm or HTM\n";}
    }
  }
else {printusage();}

sub printusage {
    print <<USAGEDESC;

usage:
        pdfprint [-options ...] list

where options include:
    -help                        print out this message
    -verbose                     verbose
    -recursive directory         scan recursively the directory
    -match     files             match different files ex. *.pdf, a?.*
    -configure file              default pdfprint.cfg

list:
    with list you can use metacharacters and relative and absolute path name
    and ftp URL like ftp://ftp.host.com/directory/file
    and http URL like http://www.host.com/directory/file
    
example:
    pdfprint *.pdf
    pdfprint -v -c tests/test.cfg */*.pdf
    pdfprint -m a* -r pdfdocs

If you want to know more about this tool, you might want
to read the docs. They came together with pdfprint!

Home: http://www.geocities.com/CapeCanaveral/Hangar/4794/pdfprint.html

USAGEDESC
    exit(1);
}
